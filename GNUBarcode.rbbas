#tag ClassProtected Class GNUBarcode	#tag Method, Flags = &h0		Sub Clip()		  Dim q As Picture		  		  q=New Picture(520, 120, 32)		  		  q.Graphics.DrawPicture p, _		  0,0, 520, 120, _		  40, p.Height-155, 520, 120		  		  Dim rsf As RGBSurface		  rsf=q.RGBSurface		  		  Dim i,j As Integer		  j=519		  For i=0 to 519		    if q.Graphics.Pixel(519-i, 55).Red<250 Then		      j=i		      Exit		    End If		  Next		  		  p=New Picture(j+1, q.Height, 32)		  p.Graphics.DrawPicture q, 0, 0		  		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub Constructor(myText As String, code As Integer, file As FolderItem)		  oFlags=BARCODE_OUT_PS + BARCODE_OUT_NOHEADERS		  		  // FILE * fopen ( const char * filename, const char * mode );		  Declare Function fopen Lib "/usr/lib/libc.dylib" (filename As Ptr, mode As Ptr) As Ptr		  // int fclose ( FILE * stream );		  Declare Sub fclose Lib "/usr/lib/libc.dylib" (stream As Ptr) 		  		  Dim filepath As MemoryBlock="/tmp/a.ps"+ChrB(0)		  Dim mode As MemoryBlock="w"+ChrB(0)		  Dim fo As MemoryBlock=fopen(filepath, mode)		  		  // extern int Barcode_Encode_and_Print(char *text, FILE *f, int wid, int hei, int xoff, int yoff, int flags);		  Declare Function Barcode_Encode_and_Print Lib kLib (text As Ptr, f As Ptr, width As Integer, height As Integer, _		  xoff As Integer, yoff As Integer, flags As Integer) As Integer		  		  Dim zeText As MemoryBlock=myText+ChrB(0)		  Dim OSErr As Integer		  OSErr = Barcode_Encode_and_Print(zeText, fo, 200, 100, 40, 40, code + oflags)		  fclose(fo)		  		  Dim sh As New Shell		  		  sh.Execute "cp /tmp/a.ps "+file.ShellPath		  sh.Execute "/usr/local/bin/ps2pdf /tmp/a.ps /tmp/aa.pdf"		  		  Dim f As FolderItem		  f=GetFolderItem("/tmp/aa.pdf", f.PathTypeShell)		  		  p=p.Open(f)		  if p = Nil Then Return		  		  Clip()		  		  		  		End Sub	#tag EndMethod	#tag Property, Flags = &h0		oFlags As Integer	#tag EndProperty	#tag Property, Flags = &h0		p As Picture	#tag EndProperty	#tag Constant, Name = BARCODE_DEFAULT_FLAGS, Type = Double, Dynamic = False, Default = \"0", Scope = Public	#tag EndConstant	#tag Constant, Name = BARCODE_ENCODING_MASK, Type = Double, Dynamic = False, Default = \"&hFF", Scope = Public	#tag EndConstant	#tag Constant, Name = BARCODE_NO_ASCII, Type = Double, Dynamic = False, Default = \"&h100", Scope = Public	#tag EndConstant	#tag Constant, Name = BARCODE_NO_CHECKSUM, Type = Double, Dynamic = False, Default = \"&h200", Scope = Public	#tag EndConstant	#tag Constant, Name = BARCODE_OUTPUT_MASK, Type = Double, Dynamic = False, Default = \"&hff000", Scope = Public	#tag EndConstant	#tag Constant, Name = BARCODE_OUT_EPS, Type = Double, Dynamic = False, Default = \"&h00001000", Scope = Public	#tag EndConstant	#tag Constant, Name = BARCODE_OUT_NOHEADERS, Type = Double, Dynamic = False, Default = \"&h00100000", Scope = Public	#tag EndConstant	#tag Constant, Name = BARCODE_OUT_PCL, Type = Double, Dynamic = False, Default = \"&h00004000", Scope = Public	#tag EndConstant	#tag Constant, Name = BARCODE_OUT_PS, Type = Double, Dynamic = False, Default = \"&h00002000", Scope = Public	#tag EndConstant	#tag Constant, Name = cBARCODE_128, Type = Double, Dynamic = False, Default = \"5", Scope = Public	#tag EndConstant	#tag Constant, Name = cBARCODE_128B, Type = Double, Dynamic = False, Default = \"7", Scope = Public	#tag EndConstant	#tag Constant, Name = cBARCODE_128C, Type = Double, Dynamic = False, Default = \"6", Scope = Public	#tag EndConstant	#tag Constant, Name = cBARCODE_128RAW, Type = Double, Dynamic = False, Default = \"9", Scope = Public	#tag EndConstant	#tag Constant, Name = cBARCODE_39, Type = Double, Dynamic = False, Default = \"4", Scope = Public	#tag EndConstant	#tag Constant, Name = cBARCODE_93, Type = Double, Dynamic = False, Default = \"13", Scope = Public	#tag EndConstant	#tag Constant, Name = cBARCODE_ANY, Type = Double, Dynamic = False, Default = \"0", Scope = Public	#tag EndConstant	#tag Constant, Name = cBARCODE_CBR, Type = Double, Dynamic = False, Default = \"10", Scope = Public	#tag EndConstant	#tag Constant, Name = cBARCODE_EAN, Type = Double, Dynamic = False, Default = \"1", Scope = Public	#tag EndConstant	#tag Constant, Name = cBARCODE_I25, Type = Double, Dynamic = False, Default = \"8", Scope = Public	#tag EndConstant	#tag Constant, Name = cBARCODE_ISBN, Type = Double, Dynamic = False, Default = \"3", Scope = Public	#tag EndConstant	#tag Constant, Name = cBARCODE_MSI, Type = Double, Dynamic = False, Default = \"11", Scope = Public	#tag EndConstant	#tag Constant, Name = cBARCODE_PLS, Type = Double, Dynamic = False, Default = \"12", Scope = Public	#tag EndConstant	#tag Constant, Name = cBARCODE_UPC, Type = Double, Dynamic = False, Default = \"2", Scope = Public	#tag EndConstant	#tag Constant, Name = kHeader, Type = String, Dynamic = False, Default = \"%%!PS-Adobe-2.0\r%%%%Creator: RB barcode generator\r%%%%EndComments\r%%%%EndProlog\r\r%%%%Page: 1 1\r\r\r", Scope = Public	#tag EndConstant	#tag Constant, Name = kLib, Type = String, Dynamic = False, Default = \"/tmp/libbarcode.dylib", Scope = Public	#tag EndConstant	#tag ViewBehavior		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="oFlags"			Group="Behavior"			Type="Integer"		#tag EndViewProperty		#tag ViewProperty			Name="p"			Group="Behavior"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass